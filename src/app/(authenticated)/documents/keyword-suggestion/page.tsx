
'use client';

import { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Textarea } from '@/components/ui/textarea';
import { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Loader2, Lightbulb, AlertTriangle } from 'lucide-react';
import { suggestDocumentKeywords, type SuggestDocumentKeywordsInput, type SuggestDocumentKeywordsOutput } from '@/ai/flows/suggest-document-keywords';
import { useToast } from '@/hooks/use-toast';

export default function KeywordSuggestionPage() {
  const [documentText, setDocumentText] = useState<string>('');
  const [keywords, setKeywords] = useState<string[]>([]);
  const [isLoading, setIsLoading] = useState<boolean>(false);
  const [error, setError] = useState<string | null>(null);
  const { toast } = useToast();

  const handleSubmit = async () => {
    if (!documentText.trim()) {
      toast({
        title: 'Input Required',
        description: 'Please enter some document text to suggest keywords.',
        variant: 'destructive',
      });
      return;
    }

    setIsLoading(true);
    setError(null);
    setKeywords([]);

    try {
      const input: SuggestDocumentKeywordsInput = { documentText };
      const result: SuggestDocumentKeywordsOutput = await suggestDocumentKeywords(input);
      setKeywords(result.keywords);
      toast({
        title: 'Keywords Suggested',
        description: `Found ${result.keywords.length} keywords.`,
      });
    } catch (e: any) {
      console.error('Error suggesting keywords:', e);
      const errorMessage = e.message || 'An unexpected error occurred.';
      setError(errorMessage);
      toast({
        title: 'Error',
        description: `Failed to suggest keywords: ${errorMessage}`,
        variant: 'destructive',
      });
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <div className="container mx-auto px-4 md:px-6 py-6">
      <header className="mb-8 mt-0">
        <div className="flex items-center gap-3">
          <Lightbulb className="h-8 w-8 text-primary" />
          <h1 className="text-3xl font-bold tracking-tight text-foreground mt-0">AI Keyword Suggestion</h1>
        </div>
        <p className="mt-2 text-muted-foreground">
          Paste your document text below to get AI-powered keyword suggestions for better categorization and searchability.
        </p>
      </header>

      <div className="grid gap-8 md:grid-cols-2">
        <Card className="shadow-lg">
          <CardHeader>
            <CardTitle>Document Text Input</CardTitle>
            <CardDescription>Enter the content of your document here.</CardDescription>
          </CardHeader>
          <CardContent className="space-y-4">
            <Textarea
              placeholder="Paste your document text here..."
              value={documentText}
              onChange={(e) => setDocumentText(e.target.value)}
              rows={15}
              className="resize-none"
              disabled={isLoading}
            />
            <Button onClick={handleSubmit} disabled={isLoading || !documentText.trim()} className="w-full">
              {isLoading ? (
                <>
                  <Loader2 className="mr-2 h-4 w-4 animate-spin" />
                  Suggesting Keywords...
                </>
              ) : (
                <>
                  <Lightbulb className="mr-2 h-4 w-4" />
                  Suggest Keywords
                </>
              )}
            </Button>
          </CardContent>
        </Card>

        <Card className="shadow-lg">
          <CardHeader>
            <CardTitle>Suggested Keywords</CardTitle>
            <CardDescription>Keywords generated by AI based on your document text.</CardDescription>
          </CardHeader>
          <CardContent>
            {isLoading && (
              <div className="flex items-center justify-center py-10">
                <Loader2 className="h-8 w-8 animate-spin text-primary" />
                <p className="ml-2 text-muted-foreground">Analyzing document...</p>
              </div>
            )}
            {error && !isLoading && (
              <div className="flex flex-col items-center justify-center py-10 text-destructive">
                <AlertTriangle className="h-8 w-8 mb-2" />
                <p className="font-semibold">Error suggesting keywords</p>
                <p className="text-sm text-center">{error}</p>
              </div>
            )}
            {!isLoading && !error && keywords.length > 0 && (
              <div className="flex flex-wrap gap-2">
                {keywords.map((keyword, index) => (
                  <Badge key={index} variant="default" className="text-sm px-3 py-1 bg-accent text-accent-foreground">
                    {keyword}
                  </Badge>
                ))}
              </div>
            )}
            {!isLoading && !error && keywords.length === 0 && documentText && (
              <p className="text-muted-foreground text-center py-10">
                No keywords suggested for the provided text. Try a different or more detailed document.
              </p>
            )}
             {!isLoading && !error && keywords.length === 0 && !documentText && (
              <p className="text-muted-foreground text-center py-10">
                Enter some document text and click "Suggest Keywords" to see results here.
              </p>
            )}
          </CardContent>
        </Card>
      </div>
    </div>
  );
}
